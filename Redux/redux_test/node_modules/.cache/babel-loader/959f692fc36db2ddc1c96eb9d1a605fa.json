{"ast":null,"code":"var _jsxFileName = \"/Users/dyq/Desktop/Redux/redux_test/src/components/Count/index.jsx\";\nimport React, { Component } from \"react\"; //用于获取redux中帮你保存的状态\n\nimport store from \"../redux/store\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Count extends Component {\n  constructor() {\n    super(...arguments);\n\n    this.increment = () => {\n      const {\n        value\n      } = this.selectNumber; // 通知redux给我加value\n      // 第二个api，dispatch方法也在store上\n\n      store.dispatch({\n        type: 'increment',\n        data: value * 1\n      }); // 为什么不行呢，因为你Count组件实例state没有变了，Count组件没有再render了\n      // this.setState({})\n    };\n\n    this.decrement = () => {\n      const {\n        value\n      } = this.selectNumber;\n      const {\n        count\n      } = this.state; // 强制类型转换\n\n      this.setState({\n        count: count - value * 1\n      });\n    };\n\n    this.incrementIfOdd = () => {\n      const {\n        value\n      } = this.selectNumber;\n      const {\n        count\n      } = this.state;\n\n      if (count % 2 !== 0) {\n        this.setState({\n          count: count + value * 1\n        });\n      }\n    };\n\n    this.incrementAsync = () => {\n      const {\n        value\n      } = this.selectNumber;\n      const {\n        count\n      } = this.state;\n      setTimeout(() => {\n        this.setState({\n          count: count + value * 1\n        });\n      }, 500);\n    };\n  }\n\n  //求和的和已经给redux管理了，就不用放在自己的state里面\n  //state = { count: 0 }; 不给redux管理的属性再写在state里面，需要共享的再拿出去\n  componentDidMount() {\n    // 检测redux中状态的变化，只要变化，就调用render\n    //store的第三个api subscribe订阅，只要redux里面任何一个状态的改变\n    store.subscribe(() => {// render不可以自己调用，这样不起作用\n      // this.render()\n      //我要更新自己的state，但是我什么也不更新，晃了react一下，react帮你调render\n      //为什么不在increment方法里面写，因为redux的状态可能在别的地方也变化\n      // this.setState({})\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"\\u5F53\\u524D\\u6C42\\u548C\\u4E3A: \", store.getState()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        ref: c => this.selectNumber = c,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"1\",\n          children: \"1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"2\",\n          children: \"2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"3\",\n          children: \"3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), \" \", \"\\xA0\", /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.increment,\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), \"\\xA0\", /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.decrement,\n        children: \"-\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), \"\\xA0\", /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.incrementIfOdd,\n        children: \"\\u5F53\\u524D\\u6C42\\u548C\\u4E3A\\u5947\\u6570\\u518D\\u52A0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), \"\\xA0\", /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.incrementAsync,\n        children: \"\\u5F02\\u6B65\\u52A0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), \"\\xA0\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/dyq/Desktop/Redux/redux_test/src/components/Count/index.jsx"],"names":["React","Component","store","Count","increment","value","selectNumber","dispatch","type","data","decrement","count","state","setState","incrementIfOdd","incrementAsync","setTimeout","componentDidMount","subscribe","render","getState","c"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;;AACA,OAAOC,KAAP,MAAkB,gBAAlB;;AAIA,eAAe,MAAMC,KAAN,SAAoBF,SAApB,CAA8B;AAAA;AAAA;;AAAA,SAkB3CG,SAlB2C,GAkB/B,MAAM;AAChB,YAAM;AAAEC,QAAAA;AAAF,UAAY,KAAKC,YAAvB,CADgB,CAEhB;AACA;;AACAJ,MAAAA,KAAK,CAACK,QAAN,CAAe;AAACC,QAAAA,IAAI,EAAC,WAAN;AAAkBC,QAAAA,IAAI,EAACJ,KAAK,GAAC;AAA7B,OAAf,EAJgB,CAKhB;AACA;AACD,KAzB0C;;AAAA,SA0B3CK,SA1B2C,GA0B/B,MAAM;AAChB,YAAM;AAAEL,QAAAA;AAAF,UAAY,KAAKC,YAAvB;AACA,YAAM;AAAEK,QAAAA;AAAF,UAAY,KAAKC,KAAvB,CAFgB,CAGhB;;AACA,WAAKC,QAAL,CAAc;AAAEF,QAAAA,KAAK,EAAEA,KAAK,GAAGN,KAAK,GAAG;AAAzB,OAAd;AACD,KA/B0C;;AAAA,SAgC3CS,cAhC2C,GAgC1B,MAAM;AACrB,YAAM;AAAET,QAAAA;AAAF,UAAY,KAAKC,YAAvB;AACA,YAAM;AAAEK,QAAAA;AAAF,UAAY,KAAKC,KAAvB;;AACA,UAAID,KAAK,GAAG,CAAR,KAAc,CAAlB,EAAqB;AACnB,aAAKE,QAAL,CAAc;AAAEF,UAAAA,KAAK,EAAEA,KAAK,GAAGN,KAAK,GAAG;AAAzB,SAAd;AACD;AACF,KAtC0C;;AAAA,SAuC3CU,cAvC2C,GAuC1B,MAAM;AACrB,YAAM;AAAEV,QAAAA;AAAF,UAAY,KAAKC,YAAvB;AACA,YAAM;AAAEK,QAAAA;AAAF,UAAY,KAAKC,KAAvB;AACAI,MAAAA,UAAU,CAAC,MAAM;AACf,aAAKH,QAAL,CAAc;AAAEF,UAAAA,KAAK,EAAEA,KAAK,GAAGN,KAAK,GAAG;AAAzB,SAAd;AACD,OAFS,EAEP,GAFO,CAAV;AAGD,KA7C0C;AAAA;;AAC3C;AACA;AAEAY,EAAAA,iBAAiB,GAAE;AACjB;AAEA;AACAf,IAAAA,KAAK,CAACgB,SAAN,CAAgB,MAAM,CACpB;AACA;AAEA;AACA;AACA;AACD,KAPD;AAQD;;AA+BDC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,8BAGE;AAAA,uDAAYjB,KAAK,CAACkB,QAAN,EAAZ;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE;AAAQ,QAAA,GAAG,EAAGC,CAAD,IAAQ,KAAKf,YAAL,GAAoBe,CAAzC;AAAA,gCACE;AAAQ,UAAA,KAAK,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAQ,UAAA,KAAK,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAQ,UAAA,KAAK,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,EAQY,GARZ,uBAUE;AAAQ,QAAA,OAAO,EAAE,KAAKjB,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAVF,uBAWE;AAAQ,QAAA,OAAO,EAAE,KAAKM,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAXF,uBAYE;AAAQ,QAAA,OAAO,EAAE,KAAKI,cAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAZF,uBAaE;AAAQ,QAAA,OAAO,EAAE,KAAKC,cAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAbF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAiBD;;AAjE0C","sourcesContent":["import React, { Component } from \"react\";\n//用于获取redux中帮你保存的状态\nimport store from \"../redux/store\";\n\n\n\nexport default class Count extends Component {\n  //求和的和已经给redux管理了，就不用放在自己的state里面\n  //state = { count: 0 }; 不给redux管理的属性再写在state里面，需要共享的再拿出去\n\n  componentDidMount(){\n    // 检测redux中状态的变化，只要变化，就调用render\n\n    //store的第三个api subscribe订阅，只要redux里面任何一个状态的改变\n    store.subscribe(() => {\n      // render不可以自己调用，这样不起作用\n      // this.render()\n\n      //我要更新自己的state，但是我什么也不更新，晃了react一下，react帮你调render\n      //为什么不在increment方法里面写，因为redux的状态可能在别的地方也变化\n      // this.setState({})\n    })\n  }\n\n  increment = () => {\n    const { value } = this.selectNumber;\n    // 通知redux给我加value\n    // 第二个api，dispatch方法也在store上\n    store.dispatch({type:'increment',data:value*1})\n    // 为什么不行呢，因为你Count组件实例state没有变了，Count组件没有再render了\n    // this.setState({})\n  };\n  decrement = () => {\n    const { value } = this.selectNumber;\n    const { count } = this.state;\n    // 强制类型转换\n    this.setState({ count: count - value * 1 });\n  };\n  incrementIfOdd = () => {\n    const { value } = this.selectNumber;\n    const { count } = this.state;\n    if (count % 2 !== 0) {\n      this.setState({ count: count + value * 1 });\n    }\n  };\n  incrementAsync = () => {\n    const { value } = this.selectNumber;\n    const { count } = this.state;\n    setTimeout(() => {\n      this.setState({ count: count + value * 1 });\n    }, 500);\n  };\n\n  render() {\n    return (\n      <div>\n          {/* 展示初始值，想redux的store要 */}\n          {/* store的第一个api，getState() */}\n        <h1>当前求和为: {store.getState()}</h1>\n        <select ref={(c) => (this.selectNumber = c)}>\n          <option value=\"1\">1</option>\n          <option value=\"2\">2</option>\n          <option value=\"3\">3</option>\n        </select>{\" \"}\n        &nbsp;\n        <button onClick={this.increment}>+</button>&nbsp;\n        <button onClick={this.decrement}>-</button>&nbsp;\n        <button onClick={this.incrementIfOdd}>当前求和为奇数再加</button>&nbsp;\n        <button onClick={this.incrementAsync}>异步加</button>&nbsp;\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}