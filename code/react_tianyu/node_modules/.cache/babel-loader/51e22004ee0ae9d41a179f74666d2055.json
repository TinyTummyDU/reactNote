{"ast":null,"code":"var _jsxFileName = \"/Users/dyq/react/project/react_tianyu/src/App.jsx\";\n\n/* eslint-disable react/jsx-no-target-blank */\n\n/* eslint-disable jsx-a11y/alt-text */\nimport React, { Component } from \"react\";\nimport Home from \"./components/Home\";\nimport About from \"./components/About\"; //人家这个库给你很多组件，所以他用的是分别暴露\n\nimport { Link, Route, Routes } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class App extends Component {\n  //状态在哪里，操作的方法就在哪，现在我们使用消息的发布与订阅后，实现了兄弟之间通信，那我们的App就成了真正意义上的壳\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-xs-offset-2 col-xs-8\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"page-header\",\n            children: /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"React Router Demo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 19,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-xs-2 col-xs-offset-2\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"list-group\",\n            children: [/*#__PURE__*/_jsxDEV(Link, {\n              className: \"list-group-item\",\n              to: \"/about\",\n              children: \"About\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Link, {\n              className: \"list-group-item\",\n              to: \"/home\",\n              children: \"Home\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-xs-6\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"panel\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"panel-body\",\n              children: /*#__PURE__*/_jsxDEV(Routes, {\n                children: [/*#__PURE__*/_jsxDEV(Route, {\n                  path: \"/about\",\n                  element: /*#__PURE__*/_jsxDEV(About, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 56,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 56,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Route, {\n                  path: \"/home\",\n                  element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 57,\n                    columnNumber: 48\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 57,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/dyq/react/project/react_tianyu/src/App.jsx"],"names":["React","Component","Home","About","Link","Route","Routes","App","render"],"mappings":";;AAAA;;AACA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,KAAP,MAAkB,oBAAlB,C,CAEA;;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,MAAtB,QAAoC,kBAApC;;AAEA,eAAe,MAAMC,GAAN,SAAkBN,SAAlB,CAA4B;AACzC;AAEAO,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,0BAAf;AAAA,iCACE;AAAK,YAAA,SAAS,EAAC,aAAf;AAAA,mCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAQE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,0BAAf;AAAA,iCACE;AAAK,YAAA,SAAS,EAAC,YAAf;AAAA,oCAcE,QAAC,IAAD;AAAM,cAAA,SAAS,EAAC,iBAAhB;AAAkC,cAAA,EAAE,EAAC,QAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAdF,eAiBE,QAAC,IAAD;AAAM,cAAA,SAAS,EAAC,iBAAhB;AAAkC,cAAA,EAAE,EAAC,OAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAjBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAwBE;AAAK,UAAA,SAAS,EAAC,UAAf;AAAA,iCACE;AAAK,YAAA,SAAS,EAAC,OAAf;AAAA,mCACE;AAAK,cAAA,SAAS,EAAC,YAAf;AAAA,qCAME,QAAC,MAAD;AAAA,wCACE,QAAC,KAAD;AAAO,kBAAA,IAAI,EAAC,QAAZ;AAAqB,kBAAA,OAAO,eAAE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAA9B;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE,QAAC,KAAD;AAAO,kBAAA,IAAI,EAAC,OAAZ;AAAoB,kBAAA,OAAO,eAAE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAA7B;AAAA;AAAA;AAAA;AAAA,wBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AANF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAxBF;AAAA;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAmDD;;AAvDwC","sourcesContent":["/* eslint-disable react/jsx-no-target-blank */\n/* eslint-disable jsx-a11y/alt-text */\nimport React, { Component } from \"react\";\nimport Home from \"./components/Home\";\nimport About from \"./components/About\";\n\n//人家这个库给你很多组件，所以他用的是分别暴露\nimport { Link, Route, Routes } from \"react-router-dom\";\n\nexport default class App extends Component {\n  //状态在哪里，操作的方法就在哪，现在我们使用消息的发布与订阅后，实现了兄弟之间通信，那我们的App就成了真正意义上的壳\n\n  render() {\n    return (\n      <div>\n        <div className=\"row\">\n          <div className=\"col-xs-offset-2 col-xs-8\">\n            <div className=\"page-header\">\n              <h2>React Router Demo</h2>\n            </div>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-xs-2 col-xs-offset-2\">\n            <div className=\"list-group\">\n              {/* 原生html中，靠<a>跳转不同的页面 */}\n              {/* <a className=\"list-group-item\" href=\"./about.html\">\n                About\n              </a>\n              <a className=\"list-group-item active\" href=\"./home.html\">\n                Home\n              </a> */}\n\n              {/* 在React中靠路由链接实现切换组件-编写路由链接 */}\n\n              {/* React中靠路由链接实现切换组件, Link必须包裹在Router里面，有了路由器才能使用路由 */}\n              {/* 路由器分为两种（你需要告诉人家你要哪种路由器）：BrowerRouter和HashRouter，对应了history的两种模式 */}\n              {/* to 后面尽量别写大写 */}\n              <Link className=\"list-group-item\" to=\"/about\">\n                About\n              </Link>\n              <Link className=\"list-group-item\" to=\"/home\">\n                Home\n              </Link>\n            </div>\n          </div>\n          <div className=\"col-xs-6\">\n            <div className=\"panel\">\n              <div className=\"panel-body\">\n                {/* 整个页面只能用一个路由器处理，即路由链接和注册路由只能由一个Router标签去包 */}\n                {/* 怎么包呢，我们直接在index.js里面包，因为我们所有的组件都是App的自组件 */}\n\n                {/* 注册路由,检测浏览器path的变化，展示组件*/}\n                {/* P77. 路由基础。如果使用的react-router-dom版本是v6，则需要用Routes把Route包裹起来。同时Route标签中的conponent要换成element，且引用的组件名称要使用尖括号。 */}\n                <Routes>\n                  <Route path=\"/about\" element={<About />}></Route>\n                  <Route path=\"/home\" element={<Home />}></Route>\n                </Routes>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}