{"ast":null,"code":"var _jsxFileName = \"/Users/dyq/react/project/react_tianyu/src/pages/Home/Message/Detail/index.jsx\";\nimport React, { Component } from \"react\";\nimport qs from 'querystring';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst data = [{\n  id: '01',\n  content: '你好中国'\n}, {\n  id: '02',\n  content: '爱你哦'\n}, {\n  id: '03',\n  content: '未来的自己'\n}];\nexport default class Detail extends Component {\n  render() {\n    console.log(this.props); // 接收params参数\n    // const {id,title} = this.props.match.params\n    //接收search参数，search没帮你像是params一样在match里面整合为对象，你需要自己做（字符串分割），或者借助一个库（react已经有了，querystring）\n    // let obj = {name:'tom',age:18}\n    // name=tom&age=18\n    //这种编码形式叫做urlencoded编码\n    //用querystring库可以帮你，和json的方法有点像\n    //qs.stringify(obj)\n    //let obj1 = qs.parse(str)\n\n    const {\n      search\n    } = this.props.location;\n    const {\n      id,\n      title\n    } = qs.parse(search);\n    const dataObj = data.find(obj => {\n      return obj.id === id;\n    });\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"ID:\", id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"TITLE:\", title]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"CONTENT:\", dataObj.content]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/dyq/react/project/react_tianyu/src/pages/Home/Message/Detail/index.jsx"],"names":["React","Component","qs","data","id","content","Detail","render","console","log","props","search","location","title","parse","dataObj","find","obj"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,EAAP,MAAe,aAAf;;AAEA,MAAMC,IAAI,GAAG,CACT;AAACC,EAAAA,EAAE,EAAC,IAAJ;AAASC,EAAAA,OAAO,EAAC;AAAjB,CADS,EAET;AAACD,EAAAA,EAAE,EAAC,IAAJ;AAASC,EAAAA,OAAO,EAAC;AAAjB,CAFS,EAGT;AAACD,EAAAA,EAAE,EAAC,IAAJ;AAASC,EAAAA,OAAO,EAAC;AAAjB,CAHS,CAAb;AAKA,eAAe,MAAMC,MAAN,SAAqBL,SAArB,CAA+B;AAC5CM,EAAAA,MAAM,GAAG;AAEPC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAjB,EAFO,CAGP;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,UAAM;AAACC,MAAAA;AAAD,QAAW,KAAKD,KAAL,CAAWE,QAA5B;AACA,UAAM;AAACR,MAAAA,EAAD;AAAIS,MAAAA;AAAJ,QAAaX,EAAE,CAACY,KAAH,CAASH,MAAT,CAAnB;AAEA,UAAMI,OAAO,GAAGZ,IAAI,CAACa,IAAL,CAAWC,GAAD,IAAS;AAC/B,aAAOA,GAAG,CAACb,EAAJ,KAAWA,EAAlB;AACH,KAFe,CAAhB;AAGA,wBACE;AAAA,8BACE;AAAA,0BAAQA,EAAR;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,6BAAWS,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAA,+BAAaE,OAAO,CAACV,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAQD;;AA5B2C","sourcesContent":["import React, { Component } from \"react\";\nimport qs from 'querystring'\n\nconst data = [\n    {id:'01',content:'你好中国'},\n    {id:'02',content:'爱你哦'},\n    {id:'03',content:'未来的自己'}\n]\nexport default class Detail extends Component {\n  render() {\n\n    console.log(this.props);\n    // 接收params参数\n    // const {id,title} = this.props.match.params\n\n    //接收search参数，search没帮你像是params一样在match里面整合为对象，你需要自己做（字符串分割），或者借助一个库（react已经有了，querystring）\n    // let obj = {name:'tom',age:18}\n    // name=tom&age=18\n    //这种编码形式叫做urlencoded编码\n    //用querystring库可以帮你，和json的方法有点像\n    //qs.stringify(obj)\n    //let obj1 = qs.parse(str)\n    const {search} = this.props.location\n    const {id,title} = qs.parse(search)\n    \n    const dataObj = data.find((obj) => {\n        return obj.id === id;\n    })\n    return (\n      <ul>\n        <li>ID:{id}</li>\n        <li>TITLE:{title}</li>\n        <li>CONTENT:{dataObj.content}</li>\n        \n      </ul>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}