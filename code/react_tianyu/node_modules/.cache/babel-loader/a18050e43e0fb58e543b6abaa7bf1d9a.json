{"ast":null,"code":"var _jsxFileName = \"/Users/dyq/react/project/react_tianyu/src/App.jsx\";\n\n/* eslint-disable react/jsx-no-target-blank */\n\n/* eslint-disable jsx-a11y/alt-text */\nimport React, { Component } from \"react\";\nimport Home from \"./pages/Home\"; //Home是路由组件\n\nimport About from \"./pages/About\"; //About是路由组件\n\nimport Header from \"./components/Header\"; //Header是路由组件\n//人家这个库给你很多组件，所以他用的是分别暴露\n\nimport { NavLink, Link, Route } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class App extends Component {\n  //状态在哪里，操作的方法就在哪，现在我们使用消息的发布与订阅后，实现了兄弟之间通信，那我们的App就成了真正意义上的壳\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-xs-offset-2 col-xs-8\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"page-header\",\n            children: /*#__PURE__*/_jsxDEV(Header, {\n              a: 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 20,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-xs-2 col-xs-offset-2\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"list-group\",\n            children: [/*#__PURE__*/_jsxDEV(Link, {\n              className: \"list-group-item\",\n              to: \"/about\",\n              children: \"About\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Link, {\n              className: \"list-group-item\",\n              to: \"/home\",\n              children: \"Home\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(NavLink, {\n              activeClassName: \"atguigu\",\n              className: \"list-group-item\",\n              to: \"/about\",\n              children: \"About\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(NavLink, {\n              activeClassName: \"atguigu\",\n              className: \"list-group-item\",\n              to: \"/home\",\n              children: \"Home\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-xs-6\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"panel\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"panel-body\",\n              children: [/*#__PURE__*/_jsxDEV(Route, {\n                path: \"/about\",\n                component: About\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Route, {\n                path: \"/home\",\n                component: Home\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/dyq/react/project/react_tianyu/src/App.jsx"],"names":["React","Component","Home","About","Header","NavLink","Link","Route","App","render"],"mappings":";;AAAA;;AACA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,cAAjB,C,CAAiC;;AACjC,OAAOC,KAAP,MAAkB,eAAlB,C,CAAmC;;AACnC,OAAOC,MAAP,MAAmB,qBAAnB,C,CAA0C;AAE1C;;AACA,SAASC,OAAT,EAAkBC,IAAlB,EAAwBC,KAAxB,QAAqC,kBAArC;;AAEA,eAAe,MAAMC,GAAN,SAAkBP,SAAlB,CAA4B;AACzC;AAEAQ,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,0BAAf;AAAA,iCACE;AAAK,YAAA,SAAS,EAAC,aAAf;AAAA,mCACE,QAAC,MAAD;AAAQ,cAAA,CAAC,EAAE;AAAX;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAQE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,gCAEE;AAAK,UAAA,SAAS,EAAC,0BAAf;AAAA,iCACE;AAAK,YAAA,SAAS,EAAC,YAAf;AAAA,oCAeE,QAAC,IAAD;AAAM,cAAA,SAAS,EAAC,iBAAhB;AAAkC,cAAA,EAAE,EAAC,QAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAfF,eAkBE,QAAC,IAAD;AAAM,cAAA,SAAS,EAAC,iBAAhB;AAAkC,cAAA,EAAE,EAAC,OAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAlBF,eAyBE,QAAC,OAAD;AAAS,cAAA,eAAe,EAAC,SAAzB;AAAmC,cAAA,SAAS,EAAC,iBAA7C;AAA+D,cAAA,EAAE,EAAC,QAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAzBF,eA4BE,QAAC,OAAD;AAAS,cAAA,eAAe,EAAC,SAAzB;AAAmC,cAAA,SAAS,EAAC,iBAA7C;AAA+D,cAAA,EAAE,EAAC,OAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBA5BF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAFF,eAqCE;AAAK,UAAA,SAAS,EAAC,UAAf;AAAA,iCACE;AAAK,YAAA,SAAS,EAAC,OAAf;AAAA,mCACE;AAAK,cAAA,SAAS,EAAC,YAAf;AAAA,sCAQI,QAAC,KAAD;AAAO,gBAAA,IAAI,EAAC,QAAZ;AAAqB,gBAAA,SAAS,EAAEN;AAAhC;AAAA;AAAA;AAAA;AAAA,sBARJ,eASI,QAAC,KAAD;AAAO,gBAAA,IAAI,EAAC,OAAZ;AAAoB,gBAAA,SAAS,EAAED;AAA/B;AAAA;AAAA;AAAA;AAAA,sBATJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBArCF;AAAA;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAiED;;AArEwC","sourcesContent":["/* eslint-disable react/jsx-no-target-blank */\n/* eslint-disable jsx-a11y/alt-text */\nimport React, { Component } from \"react\";\nimport Home from \"./pages/Home\"; //Home是路由组件\nimport About from \"./pages/About\"; //About是路由组件\nimport Header from \"./components/Header\"; //Header是路由组件\n\n//人家这个库给你很多组件，所以他用的是分别暴露\nimport { NavLink, Link, Route } from \"react-router-dom\";\n\nexport default class App extends Component {\n  //状态在哪里，操作的方法就在哪，现在我们使用消息的发布与订阅后，实现了兄弟之间通信，那我们的App就成了真正意义上的壳\n\n  render() {\n    return (\n      <div>\n        <div className=\"row\">\n          <div className=\"col-xs-offset-2 col-xs-8\">\n            <div className=\"page-header\">\n              <Header a={1}/>\n            </div>\n          </div>\n        </div>\n        <div className=\"row\">\n          \n          <div className=\"col-xs-2 col-xs-offset-2\">\n            <div className=\"list-group\">\n              {/* 原生html中，靠<a>跳转不同的页面 */}\n              {/* <a className=\"list-group-item\" href=\"./about.html\">\n                About\n              </a>\n              <a className=\"list-group-item active\" href=\"./home.html\">\n                Home\n              </a> */}\n\n              {/* 在React中靠路由链接实现切换组件-编写路由链接 */}\n\n              {/* React中靠路由链接实现切换组件, Link必须包裹在Router里面，有了路由器才能使用路由 */}\n              {/* 路由器分为两种（你需要告诉人家你要哪种路由器）：BrowerRouter和HashRouter，对应了history的两种模式 */}\n              {/* to 后面尽量别写大写 */}\n              {/* <Link className=\"list-group-item active  \" to=\"/about\"> */}\n              <Link className=\"list-group-item\" to=\"/about\">\n                About\n              </Link>\n              <Link className=\"list-group-item\" to=\"/home\">\n                Home\n              </Link>\n\n              {/* 如果像用高亮，就不要Link的升级版 NavLink */}\n              {/* 你点谁，谁就会被追加一个类名叫active */}\n              {/* 但是我们还是加一个属性，activeClassName 点的时候就会加改属性的类名 */}\n              <NavLink activeClassName=\"atguigu\" className=\"list-group-item\" to=\"/about\">\n                About\n              </NavLink>\n              <NavLink activeClassName=\"atguigu\" className=\"list-group-item\" to=\"/home\">\n                Home\n              </NavLink>\n\n            </div>\n          </div>\n          <div className=\"col-xs-6\">\n            <div className=\"panel\">\n              <div className=\"panel-body\">\n                {/* 整个页面只能用一个路由器处理，即路由链接和注册路由只能由一个Router标签去包 */}\n                {/* 怎么包呢，我们直接在index.js里面包，因为我们所有的组件都是App的自组件 */}\n\n                {/* 注册路由,检测浏览器path的变化，展示组件*/}\n                {/* P77. 路由基础。如果使用的react-router-dom版本是v6，则需要用Routes把Route包裹起来。同时Route标签中的conponent要换成element，且引用的组件名称要使用尖括号。 */}\n          \n                  {/* component的c要小写 */}\n                  <Route path=\"/about\" component={About}></Route>\n                  <Route path=\"/home\" component={Home}></Route>\n           \n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}