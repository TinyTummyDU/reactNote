{"ast":null,"code":"var _jsxFileName = \"/Users/dyq/react/project/react_tianyu/src/components/Search/index.jsx\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport PubSub from \"pubsub-js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Search extends Component {\n  constructor() {\n    super(...arguments);\n\n    this.search = () => {\n      const {\n        keyWordElement: {\n          value: keyWord\n        }\n      } = this; //发送请求前，要求List更新状态：isFirst改为false，isLoading改为true\n      // this.props.updateAppState({ isFirst: false, isLoading: true });\n\n      PubSub.publish(\"atguigu\", {\n        isFirst: false,\n        isLoading: true\n      }); //#region 发送网络请求--使用axios发送\n      // axios.get(`api1/search/users?q=${keyWord}`).then(\n      //   (response) => {\n      //     //请求成功通知List更新状态\n      //     // this.props.updateAppState({\n      //     //   isLoading: false,\n      //     //   users: response.data.items,\n      //     // });\n      //     PubSub.publish(\"atguigu\", { users: response.data.items ,isLoading: false });\n      //   },\n      //   (error) => {\n      //     //请求失败通知List更新状态\n      //     // this.props.updateAppState({\n      //     //   isLoading: false,\n      //     // //  不能存error对象，这样的话直接页面就会爆（比如，页面就会直接展示404的全部内容），你要存错误对象的一个属性\n      //     //   err:error.message\n      //     // });\n      //     PubSub.publish(\"atguigu\", { err:error.message, isLoading: false});\n      //   }\n      // );\n      //#endregion\n      //发送网络请求--使用fetch发送\n\n      fetch(`api1/search/users21?q=${keyWord}`).then( //fetch的关注分离设计思想\n      //tmd,404也是联系服务器成功了，虽然路径有问题\n      response => {\n        console.log('联系服务器成功了', response);\n      }, error => {\n        console.log('联系服务器失败了', error);\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"jumbotron\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"jumbotron-heading\",\n        children: \"\\u641C\\u7D22github\\u7528\\u6237\\uFF08\\u90FD\\u662F\\u82F1\\u6587\\u7684\\uFF0C\\u540C\\u5B66\\uFF09\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          ref: c => {\n            this.keyWordElement = c;\n          },\n          type: \"text\",\n          placeholder: \"\\u8F93\\u5165\\u5173\\u952E\\u8BCD\\u70B9\\u51FB\\u641C\\u7D22\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), \"\\xA0\", /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.search,\n          children: \"\\u641C\\u7D22\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/dyq/react/project/react_tianyu/src/components/Search/index.jsx"],"names":["React","Component","axios","PubSub","Search","search","keyWordElement","value","keyWord","publish","isFirst","isLoading","fetch","then","response","console","log","error","render","c"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,WAAnB;;AAEA,eAAe,MAAMC,MAAN,SAAqBH,SAArB,CAA+B;AAAA;AAAA;;AAAA,SAC5CI,MAD4C,GACnC,MAAM;AACb,YAAM;AACJC,QAAAA,cAAc,EAAE;AAAEC,UAAAA,KAAK,EAAEC;AAAT;AADZ,UAEF,IAFJ,CADa,CAKb;AACA;;AACAL,MAAAA,MAAM,CAACM,OAAP,CAAe,SAAf,EAA0B;AAAEC,QAAAA,OAAO,EAAE,KAAX;AAAkBC,QAAAA,SAAS,EAAE;AAA7B,OAA1B,EAPa,CAUb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AACAC,MAAAA,KAAK,CAAE,yBAAwBJ,OAAQ,EAAlC,CAAL,CAA0CK,IAA1C,EACE;AACA;AACAC,MAAAA,QAAQ,IAAE;AAACC,QAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAuBF,QAAvB;AAAkC,OAH/C,EAIEG,KAAK,IAAE;AAACF,QAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAuBC,KAAvB;AAA8B,OAJxC;AAQD,KA1C2C;AAAA;;AA4C5CC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAS,MAAA,SAAS,EAAC,WAAnB;AAAA,8BACE;AAAI,QAAA,SAAS,EAAC,mBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAA,gCACE;AACE,UAAA,GAAG,EAAGC,CAAD,IAAO;AACV,iBAAKb,cAAL,GAAsBa,CAAtB;AACD,WAHH;AAIE,UAAA,IAAI,EAAC,MAJP;AAKE,UAAA,WAAW,EAAC;AALd;AAAA;AAAA;AAAA;AAAA,gBADF,uBAQQ;AAAQ,UAAA,OAAO,EAAE,KAAKd,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBARR;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAiBD;;AA9D2C","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport PubSub from \"pubsub-js\";\n\nexport default class Search extends Component {\n  search = () => {\n    const {\n      keyWordElement: { value: keyWord },\n    } = this;\n\n    //发送请求前，要求List更新状态：isFirst改为false，isLoading改为true\n    // this.props.updateAppState({ isFirst: false, isLoading: true });\n    PubSub.publish(\"atguigu\", { isFirst: false, isLoading: true });\n\n\n    //#region 发送网络请求--使用axios发送\n    // axios.get(`api1/search/users?q=${keyWord}`).then(\n    //   (response) => {\n    //     //请求成功通知List更新状态\n    //     // this.props.updateAppState({\n    //     //   isLoading: false,\n    //     //   users: response.data.items,\n    //     // });\n    //     PubSub.publish(\"atguigu\", { users: response.data.items ,isLoading: false });\n    //   },\n    //   (error) => {\n    //     //请求失败通知List更新状态\n    //     // this.props.updateAppState({\n    //     //   isLoading: false,\n    //     // //  不能存error对象，这样的话直接页面就会爆（比如，页面就会直接展示404的全部内容），你要存错误对象的一个属性\n    //     //   err:error.message\n    //     // });\n    //     PubSub.publish(\"atguigu\", { err:error.message, isLoading: false});\n    //   }\n    // );\n    //#endregion\n\n    //发送网络请求--使用fetch发送\n    fetch(`api1/search/users21?q=${keyWord}`).then(\n      //fetch的关注分离设计思想\n      //tmd,404也是联系服务器成功了，虽然路径有问题\n      response=>{console.log('联系服务器成功了',response);},\n      error=>{console.log('联系服务器失败了',error)}\n    )\n\n    \n  };\n\n  render() {\n    return (\n      <section className=\"jumbotron\">\n        <h3 className=\"jumbotron-heading\">\n          搜索github用户（都是英文的，同学）\n        </h3>\n        <div>\n          <input\n            ref={(c) => {\n              this.keyWordElement = c;\n            }}\n            type=\"text\"\n            placeholder=\"输入关键词点击搜索\"\n          />\n          &nbsp;<button onClick={this.search}>搜索</button>\n        </div>\n      </section>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}