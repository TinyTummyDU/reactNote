{"ast":null,"code":"var _jsxFileName = \"/Users/dyq/react/project/react_tianyu/src/components/Item/index.jsx\";\nimport React, { Component } from 'react';\nimport './index.css';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Item extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      mouse: false\n    };\n\n    this.handleMouse = flag => {\n      return () => {\n        this.setState({\n          mouse: flag\n        });\n      };\n    };\n\n    this.handleCheck = id => {\n      return event => {\n        // 这是后是checkbox的input标签type，这时候不能用原生value了，要用原生的checked属性\n        //当你勾选以后，需要更改App里面的todos的数据，那么item和App的通信其实就是孙子和爷爷的通信，一样的还是使用props传回调函数\n        this.props.updateTodo(id, event.target.checked);\n      };\n    };\n\n    this.handleDelete = id => {\n      console.log(this);\n\n      if (window.confirm('确定删除吗？')) {\n        this.props.deleteTodo(id);\n      }\n    };\n  }\n\n  //这样也可以，因为handleDelete是通过this调用的，在render里\n  handleDelete(id) {\n    console.log(this);\n\n    if (window.confirm('确定删除吗？')) {\n      this.props.deleteTodo(id);\n    }\n  }\n\n  render() {\n    const {\n      id,\n      name,\n      done\n    } = this.props;\n    const {\n      mouse\n    } = this.state;\n    return (\n      /*#__PURE__*/\n      //为什么不用css的hover，而是要用onMouseEnter和onMouseLeave，因为方便删除操作\n      //鼠标移入移出，我们要高亮，这里用了三元表达式\n      _jsxDEV(\"li\", {\n        style: {\n          backgroundColor: mouse ? '#ddd' : 'white'\n        },\n        onMouseEnter: this.handleMouse(true),\n        onMouseLeave: this.handleMouse(false),\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: done,\n            onChange: this.handleCheck(id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 6\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 6\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => this.handleDelete(id),\n          className: \"btn btn-danger\",\n          style: {\n            display: mouse ? 'block' : 'none'\n          },\n          children: \"\\u5220\\u9664\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 4\n      }, this)\n    );\n  }\n\n}\nItem.propTypes = {\n  // todos:PropTypes.array.isRequired,\n  updateTodo: PropTypes.func.isRequired,\n  deleteTodo: PropTypes.func.isRequired\n};","map":{"version":3,"sources":["/Users/dyq/react/project/react_tianyu/src/components/Item/index.jsx"],"names":["React","Component","PropTypes","Item","state","mouse","handleMouse","flag","setState","handleCheck","id","event","props","updateTodo","target","checked","handleDelete","console","log","window","confirm","deleteTodo","render","name","done","backgroundColor","display","propTypes","func","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,aAAP;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,eAAe,MAAMC,IAAN,SAAmBF,SAAnB,CAA6B;AAAA;AAAA;AAAA,SAI3CG,KAJ2C,GAInC;AAACC,MAAAA,KAAK,EAAC;AAAP,KAJmC;;AAAA,SAQ3CC,WAR2C,GAQ5BC,IAAD,IAAQ;AACrB,aAAO,MAAI;AACV,aAAKC,QAAL,CAAc;AAACH,UAAAA,KAAK,EAACE;AAAP,SAAd;AACA,OAFD;AAGA,KAZ0C;;AAAA,SAiB3CE,WAjB2C,GAiB5BC,EAAD,IAAM;AACnB,aAAQC,KAAD,IAAS;AACf;AACA;AACA,aAAKC,KAAL,CAAWC,UAAX,CAAsBH,EAAtB,EAAyBC,KAAK,CAACG,MAAN,CAAaC,OAAtC;AAEA,OALD;AAMA,KAxB0C;;AAAA,SA6B3CC,YA7B2C,GA6B3BN,EAAD,IAAM;AACpBO,MAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;;AACA,UAAGC,MAAM,CAACC,OAAP,CAAe,QAAf,CAAH,EAA4B;AAC3B,aAAKR,KAAL,CAAWS,UAAX,CAAsBX,EAAtB;AACA;AACD,KAlC0C;AAAA;;AAmC3C;AACAM,EAAAA,YAAY,CAACN,EAAD,EAAI;AACfO,IAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;;AACA,QAAGC,MAAM,CAACC,OAAP,CAAe,QAAf,CAAH,EAA4B;AAC3B,WAAKR,KAAL,CAAWS,UAAX,CAAsBX,EAAtB;AACA;AACD;;AASDY,EAAAA,MAAM,GAAG;AACR,UAAM;AAACZ,MAAAA,EAAD;AAAIa,MAAAA,IAAJ;AAASC,MAAAA;AAAT,QAAiB,KAAKZ,KAA5B;AACA,UAAM;AAACP,MAAAA;AAAD,QAAU,KAAKD,KAArB;AACA;AAAA;AACC;AACA;AACA;AAAI,QAAA,KAAK,EAAE;AAACqB,UAAAA,eAAe,EAACpB,KAAK,GAAG,MAAH,GAAY;AAAlC,SAAX;AAAuD,QAAA,YAAY,EAAE,KAAKC,WAAL,CAAiB,IAAjB,CAArE;AAA6F,QAAA,YAAY,EAAE,KAAKA,WAAL,CAAiB,KAAjB,CAA3G;AAAA,gCACC;AAAA,kCAEC;AAAO,YAAA,IAAI,EAAC,UAAZ;AAAuB,YAAA,OAAO,EAAEkB,IAAhC;AAAsC,YAAA,QAAQ,EAAE,KAAKf,WAAL,CAAiBC,EAAjB;AAAhD;AAAA;AAAA;AAAA;AAAA,kBAFD,eAGC;AAAA,sBAAOa;AAAP;AAAA;AAAA;AAAA;AAAA,kBAHD;AAAA;AAAA;AAAA;AAAA;AAAA,gBADD,eAQC;AAAQ,UAAA,OAAO,EAAE,MAAK,KAAKP,YAAL,CAAkBN,EAAlB,CAAtB;AAA6C,UAAA,SAAS,EAAC,gBAAvD;AAAwE,UAAA,KAAK,EAAE;AAACgB,YAAAA,OAAO,EAACrB,KAAK,GAAC,OAAD,GAAS;AAAvB,WAA/E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBARD;AAAA;AAAA;AAAA;AAAA;AAAA;AAHD;AAeA;;AApE0C;AAAvBF,I,CA4CbwB,S,GAAY;AAClB;AACAd,EAAAA,UAAU,EAACX,SAAS,CAAC0B,IAAV,CAAeC,UAFR;AAGlBR,EAAAA,UAAU,EAACnB,SAAS,CAAC0B,IAAV,CAAeC;AAHR,C","sourcesContent":["import React, { Component } from 'react'\r\nimport './index.css'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport default class Item extends Component {\r\n\r\n\t//标识鼠标移入、移出\r\n\t//一上来是false\r\n\tstate = {mouse:false} \r\n\r\n\t//鼠标移入、移出的回调\r\n\t//如果事件绑定的函数你后面加了小括号，代表直接调用，那么这个时候，你就要加一个函数闭包（柯里化）\r\n\thandleMouse = (flag)=>{\r\n\t\treturn ()=>{\r\n\t\t\tthis.setState({mouse:flag})\r\n\t\t}\r\n\t}\r\n\r\n\t//勾选、取消勾选某一个todo的回调\r\n\t//这里必须要拿到id\r\n\t//用高阶函数，柯里化，高阶函数就是该函数返回的还是函数\r\n\thandleCheck = (id)=>{\r\n\t\treturn (event)=>{\r\n\t\t\t// 这是后是checkbox的input标签type，这时候不能用原生value了，要用原生的checked属性\r\n\t\t\t//当你勾选以后，需要更改App里面的todos的数据，那么item和App的通信其实就是孙子和爷爷的通信，一样的还是使用props传回调函数\r\n\t\t\tthis.props.updateTodo(id,event.target.checked)\r\n\r\n\t\t}\r\n\t}\r\n\r\n\t//删除一个todo的回调\r\n\t//这里必须要拿到id\r\n\t//不一定非要和handleCheck一样写高阶\r\n\thandleDelete = (id)=>{\r\n\t\tconsole.log(this);\r\n\t\tif(window.confirm('确定删除吗？')){\r\n\t\t\tthis.props.deleteTodo(id)\r\n\t\t}\r\n\t}\r\n\t//这样也可以，因为handleDelete是通过this调用的，在render里\r\n\thandleDelete(id){\r\n\t\tconsole.log(this);\r\n\t\tif(window.confirm('确定删除吗？')){\r\n\t\t\tthis.props.deleteTodo(id)\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tstatic propTypes = {\r\n\t\t// todos:PropTypes.array.isRequired,\r\n\t\tupdateTodo:PropTypes.func.isRequired,\r\n\t\tdeleteTodo:PropTypes.func.isRequired,\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst {id,name,done} = this.props\r\n\t\tconst {mouse} = this.state\r\n\t\treturn (\r\n\t\t\t//为什么不用css的hover，而是要用onMouseEnter和onMouseLeave，因为方便删除操作\r\n\t\t\t//鼠标移入移出，我们要高亮，这里用了三元表达式\r\n\t\t\t<li style={{backgroundColor:mouse ? '#ddd' : 'white'}} onMouseEnter={this.handleMouse(true)} onMouseLeave={this.handleMouse(false)}>\r\n\t\t\t\t<label>\r\n\t\t\t\t\t{/* defaultChecked */}\r\n\t\t\t\t\t<input type=\"checkbox\" checked={done} onChange={this.handleCheck(id)}/>\r\n\t\t\t\t\t<span>{name}</span>\r\n\t\t\t\t</label>\r\n\t\t\t\t{/* 鼠标进来，删除按钮再出现 */}\r\n\t\t\t\t{/* <button onClick={()=> this.handleDelete(id) } className=\"btn btn-danger\" style={{display:mouse?'block':'none'}}>删除</button> */}\r\n\t\t\t\t<button onClick={()=> this.handleDelete(id)} className=\"btn btn-danger\" style={{display:mouse?'block':'none'}}>删除</button>\r\n\t\t\t\r\n\t\t\t</li>\r\n\t\t)\r\n\t}\r\n}"]},"metadata":{},"sourceType":"module"}