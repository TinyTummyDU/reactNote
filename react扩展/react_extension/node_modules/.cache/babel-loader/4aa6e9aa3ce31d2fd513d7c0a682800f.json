{"ast":null,"code":"var _jsxFileName = \"/Users/dyq/Desktop/react/react\\u6269\\u5C55/react_extension/src/components/3_hooks/index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { Component } from \"react\"; //类式组件\n// class Demo extends Component {\n//     state = {count:0}\n//     add = () => {\n//         this.setState(state => ({count:state.count+1}))\n//     }\n//     componentDidMount(){\n//         setInterval(()=>{\n//             this.setState(state=>({count:state.count+1}))\n//         },1000)\n//     }\n//     render() {\n//         return (\n//             <div>\n//                 <h2>当前求和为{this.state.count}</h2>\n//                 <button onClick={this.add}>点我+1</button>\n//             </div>\n//         )\n//     }\n// }\n//函数式组件\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Demo() {\n  _s();\n\n  //数组的结构赋值(按照位数写就行)\n  const [count, setCount] = React.useState(0);\n  const [name, setName] = React.useState('tom'); // console.log(count,setCount);\n\n  function add() {\n    //第一种setCount的方法\n    // setCount(count + 1);\n    //第二种setCount的写法\n    setCount(count => count + 1);\n  }\n\n  function changeName() {\n    setName('jack');\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"\\u5F53\\u524D\\u6C42\\u548C\\u4E3A\\uFF1A\", count]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"\\u6211\\u7684\\u540D\\u5B57\\u662F\\uFF1A\", name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: add,\n      children: \"\\u70B9\\u6211+1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: changeName,\n      children: \"\\u70B9\\u6211\\u6539\\u540D\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Demo, \"/Go873NNNNFMPIS9FPV9BkeyirY=\");\n\n_c = Demo;\nexport default Demo;\n\nvar _c;\n\n$RefreshReg$(_c, \"Demo\");","map":{"version":3,"sources":["/Users/dyq/Desktop/react/react扩展/react_extension/src/components/3_hooks/index.jsx"],"names":["React","Component","Demo","count","setCount","useState","name","setName","add","changeName"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;AACA,SAASC,IAAT,GAAgB;AAAA;;AACd;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,KAAK,CAACK,QAAN,CAAe,CAAf,CAA1B;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,KAAK,CAACK,QAAN,CAAe,KAAf,CAAxB,CAHc,CAKd;;AAEA,WAASG,GAAT,GAAe;AACb;AACA;AACA;AACAJ,IAAAA,QAAQ,CAAED,KAAD,IAAWA,KAAK,GAAG,CAApB,CAAR;AACD;;AAED,WAASM,UAAT,GAAqB;AACnBF,IAAAA,OAAO,CAAC,MAAD,CAAP;AAED;;AAED,sBACE;AAAA,4BACE;AAAA,yDAAWJ,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,yDAAWG,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAQ,MAAA,OAAO,EAAEE,GAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE;AAAQ,MAAA,OAAO,EAAEC,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASD;;GA5BQP,I;;KAAAA,I;AA8BT,eAAeA,IAAf","sourcesContent":["import React, { Component } from \"react\";\n\n//类式组件\n// class Demo extends Component {\n\n//     state = {count:0}\n//     add = () => {\n//         this.setState(state => ({count:state.count+1}))\n//     }\n\n//     componentDidMount(){\n//         setInterval(()=>{\n//             this.setState(state=>({count:state.count+1}))\n//         },1000)\n\n//     }\n    \n//     render() {\n//         return (\n//             <div>\n//                 <h2>当前求和为{this.state.count}</h2>\n//                 <button onClick={this.add}>点我+1</button>\n//             </div>\n//         )\n//     }\n// }\n\n//函数式组件\nfunction Demo() {\n  //数组的结构赋值(按照位数写就行)\n  const [count, setCount] = React.useState(0);\n  const [name, setName] = React.useState('tom');\n\n  // console.log(count,setCount);\n\n  function add() {\n    //第一种setCount的方法\n    // setCount(count + 1);\n    //第二种setCount的写法\n    setCount((count) => count + 1);\n  }\n\n  function changeName(){\n    setName('jack');\n\n  }\n\n  return (\n    <div>\n      <h2>当前求和为：{count}</h2>\n      <h2>我的名字是：{name}</h2>\n      <button onClick={add}>点我+1</button>\n      <button onClick={changeName}>点我改名</button>\n\n    </div>\n  );\n}\n\nexport default Demo;\n"]},"metadata":{},"sourceType":"module"}